[{"/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/index.js":"1","/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/App.js":"2","/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/screens/Login.jsx":"3","/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/layouts/Layouts.jsx":"4","/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/screens/Register.jsx":"5","/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/services/auth.jsx":"6","/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/containers/MainContainer.jsx":"7","/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/services/comments.jsx":"8","/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/services/companies.jsx":"9","/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/services/api-assist.jsx":"10","/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/screens/CreateComments.jsx":"11","/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/screens/EditComments.jsx":"12","/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/screens/CreateCompany.jsx":"13","/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/Header.jsx":"14","/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/screens/CompanyDetail.jsx":"15","/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/screens/EditCompany.jsx":"16","/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/components/Companies.jsx":"17","/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/components/Comments.jsx":"18"},{"size":306,"mtime":1611759925370,"results":"19","hashOfConfig":"20"},{"size":1757,"mtime":1612309249797,"results":"21","hashOfConfig":"20"},{"size":1007,"mtime":1612294101494,"results":"22","hashOfConfig":"20"},{"size":746,"mtime":1612308931058,"results":"23","hashOfConfig":"20"},{"size":1137,"mtime":1612207583196,"results":"24","hashOfConfig":"20"},{"size":939,"mtime":1612296964194,"results":"25","hashOfConfig":"20"},{"size":2784,"mtime":1612313095921,"results":"26","hashOfConfig":"20"},{"size":952,"mtime":1612314494123,"results":"27","hashOfConfig":"20"},{"size":798,"mtime":1612296610717,"results":"28","hashOfConfig":"20"},{"size":217,"mtime":1612317105852,"results":"29","hashOfConfig":"20"},{"size":725,"mtime":1612282068188,"results":"30","hashOfConfig":"20"},{"size":1378,"mtime":1612315367579,"results":"31","hashOfConfig":"20"},{"size":710,"mtime":1612207306640,"results":"32","hashOfConfig":"20"},{"size":142,"mtime":1612213256017,"results":"33","hashOfConfig":"20"},{"size":2365,"mtime":1612312992032,"results":"34","hashOfConfig":"20"},{"size":1118,"mtime":1612291518527,"results":"35","hashOfConfig":"20"},{"size":382,"mtime":1612309362704,"results":"36","hashOfConfig":"20"},{"size":235,"mtime":1612309301459,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1lcke2a",{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},"/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/index.js",[],["82","83"],"/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/App.js",["84","85"],"import { useEffect, useState } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport Layout from \"./layouts/Layouts\"\nimport Login from './screens/Login.jsx'\nimport MainContainer from \"./containers/MainContainer\";\nimport Register from './screens/Register';\nimport { loginUser, registerUser, verifyUser, removeToken } from \"./services/auth\";\nimport CompanyDetail from './screens/CompanyDetail';\nimport Header from \"./Header\"\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState(null)\n  const history = useHistory();\n\n  useEffect(() => {\n      const handleVerify = async () => {\n        const userData = await verifyUser();\n        setCurrentUser(userData)\n      }\n      handleVerify();\n    },[]);\n  \n\n  const handleLogin = async (loginData) => {\n    const userData = await loginUser(loginData);\n    setCurrentUser(userData);\n    history.push('/');\n\n  }\n\n  const handleRegister = async (registerData) => {\n    const userData = await registerUser(registerData)\n    setCurrentUser(userData)\n    history.push('/')\n  }\n\n  const handleLogout = () => {\n    setCurrentUser(null);\n    localStorage.removeItem('authToken');\n    removeToken();\n  }\n\n\n  return (\n    <Layout currentUser={currentUser} handleLogout={handleLogout}>\n      <Switch>\n        <Route path='/login'>\n          <Login \n            handleLogin={handleLogin} />\n        </Route>\n        <Route path='/register'>\n          <Register\n          handleRegister={handleRegister}/>\n        </Route>\n        {/* <Route path='/companies/:id'>\n          <CompanyDetail/>\n      </Route> */}\n      <Route path='/'>\n          <MainContainer\n            currentUser={currentUser}\n          />\n          </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/screens/Login.jsx",[],"/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/layouts/Layouts.jsx",[],"/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/screens/Register.jsx",[],"/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/services/auth.jsx",[],"/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/containers/MainContainer.jsx",["86","87","88","89","90","91","92","93"],"import { useEffect, useState } from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport CreateCompany from \"../screens/CreateCompany\";\nimport CreateComments from \"../screens/CreateComments\";\nimport EditCompany from \"../screens/EditCompany\";\nimport CompanyDetail from '../screens/CompanyDetail'\nimport { getAllCompanies } from \"../services/companies\";\nimport { deleteComments, getAllComments, postComments, putComments, updateComments } from \"../services/comments\";\nimport { newCompany, deleteCompanies } from 'react';\nimport Companies from '../components/Companies';\nimport Comments from '../components/Comments';\nimport EditComments from '../screens/EditComments';\n\nexport default function MainContainer(props) {\n  const [companies, setCompanies] = useState([]);\n  const [comments, setComments] = useState([]);\n  const history = useHistory;\n  const { currentUser } = props;\n\n  useEffect(() => {\n    const retrieveComments = async () => {\n      const commentData = await getAllComments();\n      retrieveComments(commentData)\n    }\n    retrieveComments();\n  }, [])\n\n  useEffect(() => {\n    const retrieveCompanies = async () => {\n      const companyData = await getAllCompanies();\n      setCompanies(companyData)\n    }\n    retrieveCompanies();\n  },[])\n\n  const handleCreate = async (commentData) => {\n    const newComment = await postComments(commentData);\n    setCompanies(prevState => [...prevState, newCompany])\n    history.push('/companies')\n  }\n  const handleDelete = async (id) => {\n    await deleteCompanies(id);\n    setComments(prevState => prevState.filter(commentItem => {\n      return commentItem.id !== id\n    }))\n  }\n  const handleUpdate = async (id, commentData) => {\n    const updatedComment = await putComments(id, commentData);\n    setComments(prevState => prevState.map(commentItem => {\n      return commentItem.id === Number(id) ? updatedComment : commentItem\n    }))\n    history.push('/comments')\n  }\n\n\n  useEffect(() => {\n    const getAllCompanies = async () => {\n      const companyData = await getAllCompanies();\n      setCompanies(companyData)\n    }  }, [])\n    \n\n  return (\n  <Switch>\n      <Route exact path='/companies'>\n        <Companies \n          companies={companies}/>\n      </Route>\n      <Route path='/companies/:id/edit'>\n        <EditCompany\n          companies={companies}\n          handleUpdate={handleUpdate}\n        />\n      </Route>\n      <Route path='/companies/:id'>\n        <CompanyDetail\n          companies={companies}\n          currentUser={currentUser}\n        />\n        </Route>\n      <Route exact path='/comments'>\n        <Comments\n          comments={comments} />\n      </Route>\n      <Route path='/comments/:id'>\n         <EditComments\n          comments={comments} /> \n        </Route>\n  </Switch>\n  )\n}","/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/services/comments.jsx",[],"/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/services/companies.jsx",[],"/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/services/api-assist.jsx",[],"/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/screens/CreateComments.jsx",[],"/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/screens/EditComments.jsx",["94"],"import { useState, useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { readOneComment, updateComment } from '../services/comments'\nexport default function EditComments(props) {\n  const [formData, setFormData] = useState({\n    name: ''\n  })\n  const { comment_text} = formData;\n  // const { comments, handleUpdate } = props;\n  const { id } = useParams();\n  const history = useHistory()\n  useEffect(() => {\n    const prefillFormData = async() => {\n      const commentItem = await readOneComment(id)\n      console.log(commentItem)\n      setFormData({\n        comment_text: commentItem.comment_text\n      })\n    }\n    if ( id ) {\n      prefillFormData()\n    }\n  }, [])\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }))\n  }\n  const handleUpdate = async (id, formData) => {\n    const resp = await updateComment(id, formData)\n    console.log(resp)\n    history.push(`/companies/${resp.company_id}`)\n  }\n  \n  return (\n    <form onSubmit={(e) => {\n      e.preventDefault();\n      handleUpdate(id, formData);\n    }}>\n      <h3>Edit Comments</h3>\n      \n        <input\n          type='text'\n          name='comment_text'\n          value={comment_text}\n          onChange={handleChange}\n        />\n    \n      <button>Submit</button>\n    </form>\n  )\n}","/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/screens/CreateCompany.jsx",[],"/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/Header.jsx",[],"/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/screens/CompanyDetail.jsx",["95","96","97","98"],"import { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { postComments , deleteComments } from '../services/comments';\nimport { getOneCompany } from '../services/companies';\n\nexport default function CompanyDetail(props) {\n  const [companyItem, setCompanyItem] = useState(null);\n  const [companyId, setCompanyId] = useState('')\n  const [formdata, setFormData] = useState('')\n  const { id } = useParams();\n  const { currentUser } = props;\n  \n  useEffect(() => {\n    const fetchCompanyItem = async () => {\n      const companyData = await getOneCompany(id);\n      setCompanyItem(companyData);\n    }\n    fetchCompanyItem();\n  }, [id])\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const newComment = await postComments(id, formdata)\n    let comments = companyItem.comments\n    comments.push(newComment)\n    setCompanyItem(prevsState => ({\n      ...prevsState, \n      comments\n    }))\n    setFormData(\"\")\n// const companyItem = await addCompany({ company_id: companyId, commpany_id: id });\n    // setCompanyItem(companyItem);\n  }\n\n  const handleDelete = async (id) => {\n    const newComment = await deleteComments(id)\n    // let comments = companyItem.comments\n    // comments.pus(newComment)\n    setCompanyItem(prevsState => ({\n      ...prevsState,\n      comments: prevsState.comments.filter(X => X.id != id)\n    }))\n  }\n    \n\n  \n  const handleChange = (e) => {\n    const { value } = e.target;\n    setFormData(value);\n  }\n\n  return (\n    <div>\n      <h3>{companyItem?.name}</h3>\n      {/* {companyItem?.companies.map(company => (\n        <p key={company.id}>{company.name}</p>\n      ))} */}\n      {\n        companyItem?.comments.map(comment => {\n          return <div>{\n            comment.comment_text\n          }{\n              comment.user_id.toString() === currentUser?.id.toString() ?\n               <> <button onClick={\n                  ()=>handleDelete(comment.id)\n                }>delete</button> \n                <Link to= {`/comments/${comment.id}`}><button> edit </button></Link></>: \"  \"\n          }\n          </div>\n        })\n      }\n      <form onSubmit={handleSubmit}>\n        <textarea\n          onChange={\n            handleChange\n        }\n          value={\n            formdata\n          }\n        />\n          \n       \n        <button>add</button>\n      </form>\n    </div>\n  )\n}","/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/screens/EditCompany.jsx",["99"],"import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport default function EditCompany(props) {\n  const [formData, setFormData] = useState({\n    name: ''\n  })\n  const { name } = formData;\n  const { companies, handleUpdate } = props;\n  const { id } = useParams();\n\n  useEffect(() => {\n    const prefillFormData = () => {\n      const companyItem = companies.find((companyItem) => {\n        return companyItem.id === Number(id)\n      })\n      setFormData({\n        name: companyItem.name\n      })\n    }\n    if ( companies.length) {\n      prefillFormData()\n    }\n  }, [companies])\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }))\n  }\n\n  return (\n    <form onSubmit={(e) => {\n      e.preventDefault();\n      handleUpdate(id, formData);\n    }}>\n      <h3>Edit Company</h3>\n      <label>Name:\n        <input\n          type='text'\n          name='name'\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <button>Submit</button>\n    </form>\n  )\n}","/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/components/Companies.jsx",[],"/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/components/Comments.jsx",["100"],"import React from 'react';\nimport Link from 'react-router-dom';\n\nconst Comments = (props) => {\n  const {comments} = props\n  return (\n    <div>\n    {comments.map(comments => comments.name)}  \n    </div>\n  );\n};\n\nexport default Comments;",["101","102"],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":8,"column":8,"nodeType":"109","messageId":"110","endLine":8,"endColumn":21},{"ruleId":"107","severity":1,"message":"111","line":9,"column":8,"nodeType":"109","messageId":"110","endLine":9,"endColumn":14},{"ruleId":"107","severity":1,"message":"112","line":3,"column":8,"nodeType":"109","messageId":"110","endLine":3,"endColumn":21},{"ruleId":"107","severity":1,"message":"113","line":4,"column":8,"nodeType":"109","messageId":"110","endLine":4,"endColumn":22},{"ruleId":"107","severity":1,"message":"114","line":8,"column":10,"nodeType":"109","messageId":"110","endLine":8,"endColumn":24},{"ruleId":"107","severity":1,"message":"115","line":8,"column":69,"nodeType":"109","messageId":"110","endLine":8,"endColumn":83},{"ruleId":"107","severity":1,"message":"116","line":36,"column":9,"nodeType":"109","messageId":"110","endLine":36,"endColumn":21},{"ruleId":"107","severity":1,"message":"117","line":37,"column":11,"nodeType":"109","messageId":"110","endLine":37,"endColumn":21},{"ruleId":"107","severity":1,"message":"118","line":41,"column":9,"nodeType":"109","messageId":"110","endLine":41,"endColumn":21},{"ruleId":"107","severity":1,"message":"119","line":58,"column":33,"nodeType":"109","messageId":"110","endLine":58,"endColumn":48},{"ruleId":"120","severity":1,"message":"121","line":23,"column":6,"nodeType":"122","endLine":23,"endColumn":8,"suggestions":"123"},{"ruleId":"107","severity":1,"message":"124","line":8,"column":10,"nodeType":"109","messageId":"110","endLine":8,"endColumn":19},{"ruleId":"107","severity":1,"message":"125","line":8,"column":21,"nodeType":"109","messageId":"110","endLine":8,"endColumn":33},{"ruleId":"107","severity":1,"message":"117","line":36,"column":11,"nodeType":"109","messageId":"110","endLine":36,"endColumn":21},{"ruleId":"126","severity":1,"message":"127","line":41,"column":54,"nodeType":"128","messageId":"129","endLine":41,"endColumn":56},{"ruleId":"120","severity":1,"message":"121","line":24,"column":6,"nodeType":"122","endLine":24,"endColumn":17,"suggestions":"130"},{"ruleId":"107","severity":1,"message":"131","line":2,"column":8,"nodeType":"109","messageId":"110","endLine":2,"endColumn":12},{"ruleId":"103","replacedBy":"132"},{"ruleId":"105","replacedBy":"133"},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'CompanyDetail' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","'CreateCompany' is defined but never used.","'CreateComments' is defined but never used.","'deleteComments' is defined but never used.","'updateComments' is defined but never used.","'handleCreate' is assigned a value but never used.","'newComment' is assigned a value but never used.","'handleDelete' is assigned a value but never used.","'getAllCompanies' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["136"],"'companyId' is assigned a value but never used.","'setCompanyId' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["137"],"'Link' is defined but never used.",["134"],["135"],"no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},"Update the dependencies array to be: [id]",{"range":"142","text":"143"},"Update the dependencies array to be: [companies, id]",{"range":"144","text":"145"},[701,703],"[id]",[605,616],"[companies, id]"]