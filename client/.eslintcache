[{"/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/index.js":"1","/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/App.js":"2","/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/screens/Login.jsx":"3","/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/layouts/Layouts.jsx":"4","/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/screens/Register.jsx":"5","/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/services/auth.jsx":"6","/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/containers/MainContainer.jsx":"7","/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/services/comments.jsx":"8","/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/services/companies.jsx":"9","/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/services/api-assist.jsx":"10","/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/screens/CreateComments.jsx":"11","/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/screens/EditComments.jsx":"12","/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/screens/CreateCompany.jsx":"13","/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/Header.jsx":"14","/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/screens/CompanyDetail.jsx":"15","/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/screens/EditCompany.jsx":"16","/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/components/Companies.jsx":"17"},{"size":306,"mtime":1611759925370,"results":"18","hashOfConfig":"19"},{"size":1760,"mtime":1612229712181,"results":"20","hashOfConfig":"19"},{"size":1006,"mtime":1612206646661,"results":"21","hashOfConfig":"19"},{"size":736,"mtime":1612207994759,"results":"22","hashOfConfig":"19"},{"size":1137,"mtime":1612207583196,"results":"23","hashOfConfig":"19"},{"size":935,"mtime":1612189401420,"results":"24","hashOfConfig":"19"},{"size":2531,"mtime":1612229082589,"results":"25","hashOfConfig":"19"},{"size":930,"mtime":1612207012518,"results":"26","hashOfConfig":"19"},{"size":798,"mtime":1612229965518,"results":"27","hashOfConfig":"19"},{"size":239,"mtime":1612277314382,"results":"28","hashOfConfig":"19"},{"size":713,"mtime":1612125833804,"results":"29","hashOfConfig":"19"},{"size":1116,"mtime":1612212507070,"results":"30","hashOfConfig":"19"},{"size":710,"mtime":1612207306640,"results":"31","hashOfConfig":"19"},{"size":142,"mtime":1612213256017,"results":"32","hashOfConfig":"19"},{"size":1429,"mtime":1612230038179,"results":"33","hashOfConfig":"19"},{"size":1118,"mtime":1612225660440,"results":"34","hashOfConfig":"19"},{"size":200,"mtime":1612229226024,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1lcke2a",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/index.js",[],["76","77"],"/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/App.js",["78"],"import { useEffect, useState } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport Layout from \"./layouts/Layouts\"\nimport Login from './screens/Login.jsx'\nimport MainContainer from \"./containers/MainContainer\";\nimport Register from './screens/Register';\nimport { loginUser, registerUser, verifyUser, removeToken } from \"./services/auth\";\nimport Header from './Header';\nimport CompanyDetail from './screens/CompanyDetail';\n\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState(null)\n  const history = useHistory();\n\n  useEffect(() => {\n      const handleVerify = async () => {\n        const userData = await verifyUser();\n        setCurrentUser(userData)\n      }\n      handleVerify();\n    },[]);\n  \n\n  const handleLogin = async (loginData) => {\n    const userData = await loginUser(loginData);\n    setCurrentUser(userData);\n    history.push('/');\n\n  }\n\n  const handleRegister = async (registerData) => {\n    const userData = await registerUser(registerData)\n    setCurrentUser(userData)\n    history.push('/')\n  }\n\n  const handleLogout = () => {\n    setCurrentUser(null);\n    localStorage.removeItem('authToken');\n    removeToken();\n  }\n\n\n  return (\n    <Layout currentUser={currentUser} handleLogout={handleLogout}>\n      <Switch>\n        <Route path='/login'>\n          <Login \n            handleLogin={handleLogin} />\n        </Route>\n        <Route path='/register'>\n          <Register\n          handleRegister={handleRegister}/>\n        </Route>\n        <Route exact path='/'>\n          <MainContainer\n            currentUser={currentUser}\n           />\n        </Route>\n        <Route path='/companies/:id'>\n          <CompanyDetail/>\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/screens/Login.jsx",[],"/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/layouts/Layouts.jsx",[],"/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/screens/Register.jsx",[],"/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/services/auth.jsx",[],"/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/containers/MainContainer.jsx",["79","80","81","82","83","84","85","86","87","88"],"import { useEffect, useState } from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport CreateCompany from \"../screens/CreateCompany\";\nimport CreateComments from \"../screens/CreateComments\";\nimport EditCompany from \"../screens/EditCompany\";\nimport CompanyDetail from '../screens/CompanyDetail'\nimport { getAllCompanies } from \"../services/companies\";\nimport { deleteComments, getAllComments, postComments, putComments, updateComments } from \"../services/comments\";\nimport { newCompany, deleteCompanies } from 'react';\nimport Companies from '../components/Companies';\n\n\nexport default function MainContainer(props) {\n  const [companies, setCompanies] = useState([]);\n  const [comments, setComments] = useState([]);\n  const history = useHistory;\n  const { currentUser } = props;\n\n  useEffect(() => {\n    const retrieveComments = async () => {\n      const commentData = await getAllComments();\n      setComments(commentData)\n    }\n    retrieveComments();\n  }, [])\n\n  useEffect(() => {\n    const retrieveCompanies = async () => {\n      const companyData = await getAllCompanies();\n      setCompanies(companyData)\n    }\n    retrieveCompanies();\n  },[])\n\n  const handleCreate = async (commentData) => {\n    const newComment = await postComments(commentData);\n    setCompanies(prevState => [...prevState, newCompany])\n    history.push('/companies')\n  }\n  const handleDelete = async (id) => {\n    await deleteCompanies(id);\n    setComments(prevState => prevState.filter(commentItem => {\n      return commentItem.id !== id\n    }))\n  }\n  const handleUpdate = async (id, commentData) => {\n    const updatedComment = await putComments(id, commentData);\n    setComments(prevState => prevState.map(commentItem => {\n      return commentItem.id === Number(id) ? updatedComment : commentItem\n    }))\n    history.push('/comments')\n  }\n\n\n  useEffect(() => {\n    const getAllCompanies = async () => {\n      const companyData = await getAllCompanies();\n      setCompanies(companyData)\n    }  }, [])\n    \n\n  return (\n  <Switch>\n      <Route path='/companies'>\n        <Companies \n          companies={companies}/>\n      </Route>\n      <Route path='/companies/:id/edit'>\n        <EditCompany\n          companies={companies}\n          handleUpdate={handleUpdate}\n        />\n      </Route>\n      <Route path='/foods/:id'>\n        <CompanyDetail\n          companies={companies}\n        />\n        </Route>\n\n      <Route path='/comments'>\n        {/* <Comments\n          comments={comments} /> */}\n        </Route>\n  </Switch>\n  )\n}","/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/services/comments.jsx",[],"/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/services/companies.jsx",[],"/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/services/api-assist.jsx",[],"/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/screens/CreateComments.jsx",[],"/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/screens/EditComments.jsx",["89"],"import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport default function EditComments(props) {\n  const [formData, setFormData] = useState({\n    name: ''\n  })\n  const { name } = formData;\n  const { comments, handleUpdate } = props;\n  const { id } = useParams();\n\n  useEffect(() => {\n    const prefillFormData = () => {\n      const commentItem = comments.find((commentItem) => {\n        return commentItem.id === Number(id)\n      })\n      setFormData({\n        name: commentItem.name\n      })\n    }\n    if ( comments.length) {\n      prefillFormData()\n    }\n  }, [comments])\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }))\n  }\n\n  return (\n    <form onSubmit={(e) => {\n      e.preventDefault();\n      handleUpdate(id, formData);\n    }}>\n      <h3>Edit Comments</h3>\n      <label>Name:\n        <input\n          type='text'\n          name='name'\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <button>Submit</button>\n    </form>\n  )\n}",["90","91"],"/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/screens/CreateCompany.jsx",[],"/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/Header.jsx",[],"/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/screens/CompanyDetail.jsx",[],"/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/screens/EditCompany.jsx",["92"],"import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport default function EditCompany(props) {\n  const [formData, setFormData] = useState({\n    name: ''\n  })\n  const { name } = formData;\n  const { companies, handleUpdate } = props;\n  const { id } = useParams();\n\n  useEffect(() => {\n    const prefillFormData = () => {\n      const companyItem = companies.find((companyItem) => {\n        return companyItem.id === Number(id)\n      })\n      setFormData({\n        name: companyItem.name\n      })\n    }\n    if ( companies.length) {\n      prefillFormData()\n    }\n  }, [companies])\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }))\n  }\n\n  return (\n    <form onSubmit={(e) => {\n      e.preventDefault();\n      handleUpdate(id, formData);\n    }}>\n      <h3>Edit Company</h3>\n      <label>Name:\n        <input\n          type='text'\n          name='name'\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <button>Submit</button>\n    </form>\n  )\n}","/Users/jeffbond/Documents/Projects/peafour/peafour/client/src/components/Companies.jsx",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":8,"column":8,"nodeType":"99","messageId":"100","endLine":8,"endColumn":14},{"ruleId":"97","severity":1,"message":"101","line":3,"column":8,"nodeType":"99","messageId":"100","endLine":3,"endColumn":21},{"ruleId":"97","severity":1,"message":"102","line":4,"column":8,"nodeType":"99","messageId":"100","endLine":4,"endColumn":22},{"ruleId":"97","severity":1,"message":"103","line":8,"column":10,"nodeType":"99","messageId":"100","endLine":8,"endColumn":24},{"ruleId":"97","severity":1,"message":"104","line":8,"column":69,"nodeType":"99","messageId":"100","endLine":8,"endColumn":83},{"ruleId":"97","severity":1,"message":"105","line":15,"column":10,"nodeType":"99","messageId":"100","endLine":15,"endColumn":18},{"ruleId":"97","severity":1,"message":"106","line":17,"column":11,"nodeType":"99","messageId":"100","endLine":17,"endColumn":22},{"ruleId":"97","severity":1,"message":"107","line":35,"column":9,"nodeType":"99","messageId":"100","endLine":35,"endColumn":21},{"ruleId":"97","severity":1,"message":"108","line":36,"column":11,"nodeType":"99","messageId":"100","endLine":36,"endColumn":21},{"ruleId":"97","severity":1,"message":"109","line":40,"column":9,"nodeType":"99","messageId":"100","endLine":40,"endColumn":21},{"ruleId":"97","severity":1,"message":"110","line":57,"column":33,"nodeType":"99","messageId":"100","endLine":57,"endColumn":48},{"ruleId":"111","severity":1,"message":"112","line":24,"column":6,"nodeType":"113","endLine":24,"endColumn":16,"suggestions":"114"},{"ruleId":"93","replacedBy":"115"},{"ruleId":"95","replacedBy":"116"},{"ruleId":"111","severity":1,"message":"112","line":24,"column":6,"nodeType":"113","endLine":24,"endColumn":17,"suggestions":"117"},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'CreateCompany' is defined but never used.","'CreateComments' is defined but never used.","'deleteComments' is defined but never used.","'updateComments' is defined but never used.","'comments' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'handleCreate' is assigned a value but never used.","'newComment' is assigned a value but never used.","'handleDelete' is assigned a value but never used.","'getAllCompanies' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["120"],["118"],["119"],["121"],"no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},"Update the dependencies array to be: [comments, id]",{"range":"126","text":"127"},"Update the dependencies array to be: [companies, id]",{"range":"128","text":"129"},[603,613],"[comments, id]",[605,616],"[companies, id]"]